<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:dbg="debug-mode"
                    xmlns:local="clr-namespace:Choreo"
                    xmlns:logging="clr-namespace:Choreo.Logging"
                    >

    <FontFamily x:Key="DefaultFontFamily">IBM Plex Sans</FontFamily>
    <sys:Double x:Key="DefaultFontSize">20</sys:Double>
    <SolidColorBrush x:Key="DefaultBackgroundBrush" Color="Black"/>
    <SolidColorBrush x:Key="DefaultForegroundBrush" Color="White"/>
    <SolidColorBrush x:Key="DataItemFocusedBackground" Color="Green"/>
    <SolidColorBrush x:Key="DataItemUnfocusedBackground" Color="#333333"/>
    <local:DataItemStatusBrushConverter x:Key="DataItemStatusBrushConverter"/>
    <local:DataItemEnablingConverter x:Key="DataItemEnablingConverter"/>
    <local:PresetBottomPanelButtonColorConverter x:Key="PresetBottomPanelButtonColorConverter"/>
    <local:PositionConverter x:Key="PositionConverter"/>
    <local:PasswordConverter x:Key="PasswordConverter"/>
    <local:MotorStatusConverter x:Key="MotorStatusConverter"/>

    <Style TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{StaticResource DefaultBackgroundBrush}"/>
        <Setter Property="Width" Value="1280"/>
        <Setter Property="Height" Value="800"/>
        <Setter Property="WindowStyle" Value="None"/>
        <mc:AlternateContent>
            <mc:Choice Requires="dbg">
                <Setter Property="WindowState" Value="Normal"/>
            </mc:Choice>
            <mc:Fallback>
                <Setter Property="WindowState" Value="Maximized"/>
                <Setter Property="Topmost" Value="True"/>
            </mc:Fallback>
        </mc:AlternateContent>
        <Setter Property="ResizeMode" Value="NoResize"/>
    </Style>
    <Style TargetType="{x:Type UserControl}">
        <Setter Property="Background" Value="{StaticResource DefaultBackgroundBrush}"/>
    </Style>
    <SolidColorBrush x:Key="MainWindowsBackgroundBrush" Color="Black"/>
    <SolidColorBrush x:Key="MainWindowsForegroundBrush" Color="White"/>
    <Style x:Key="ButtonDefaultStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonDefaultStyle}"/>
    <Style x:Key="TopBarCommandButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonDefaultStyle}">
        <Setter Property="DockPanel.Dock" Value="Right"/>
        <Setter Property="BorderThickness" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="10,0,10,0"/>
    </Style>
    <Style x:Key="PresetButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonDefaultStyle}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush>
                    <SolidColorBrush.Color>
                        <MultiBinding Converter="{StaticResource PresetBottomPanelButtonColorConverter}" FallbackValue="DarkBlue">
                            <Binding/>
                            <Binding Source="{x:Static local:Globals.VM}" Path="PresetBeingEdited"/>
                        </MultiBinding>
                    </SolidColorBrush.Color>
                </SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Padding" Value="10,0,10,0"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Content" Value="{Binding FullName, FallbackValue=Preset X}"/>
    </Style>
    <Style TargetType="{x:Type ContextMenu}">
        <!--<Setter Property="FontFamily" Value="Comic Sans MS" />-->
        <!--<Setter Property="FontSize" Value="28" />-->
        <!--<Setter Property="Background" Value="{DynamicResource MainWindowsBackgroundBrush}"/>-->
        <!--<Setter Property="Foreground" Value="{DynamicResource MainWindowsForegroundBrush}"/>-->
    </Style>
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="FontSize" Value="26"/>
        <Setter Property = "Background" Value= "{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}"/>
        <Setter Property = "Foreground" Value= "{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
    </Style>
    <Style TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="DataItemLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#FFD1BFBF"/>
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="0"/>
    </Style>
    <Style x:Key="MeasuringUnitStyle" TargetType="{x:Type Label}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Foreground" Value="#FFD1BFBF"/>
        <Setter Property="Padding" Value="0"/>
    </Style>
    <Style x:Key="DataItemDataStyle" TargetType="{x:Type Label}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundBrush}"/>
    </Style>
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" BorderBrush="Gray" BorderThickness="2" Background="Blue" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="F1 M 0,10 L 10,20 L 20,0"
                                          Stroke="White" StrokeThickness="5" Margin="2" Opacity="0" Stretch="Uniform" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="10" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Height="{Binding ActualHeight, ElementName=PART_Content}" >
                                <Ellipse VerticalAlignment="Center">
                                    <Ellipse.Style>
                                        <Style TargetType="Ellipse">
                                            <Setter Property="Fill" Value="Red"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsOK}" Value="True">
                                                    <Setter Property="Fill" Value="Lime"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Ellipse.Style>
                                </Ellipse>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Name="PART_Content" Margin="4,0,0,0" VerticalAlignment="Center"/>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HideableGridColumnStyle" TargetType="ColumnDefinition">
        <Setter Property="Width" Value="150" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:ModeableListView}}, Path=IsEditable}" Value="False">
                <Setter Property="Width" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ChangePageButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonDefaultStyle}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Margin" Value="10,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter
                                      Content="{TemplateBinding Content}"
                                      HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="1"/>
                <Setter Property="Foreground" Value="Blue"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <local:CurrentPageVisibilityConverter x:Key="CurrentPageVisibilityConverter"/>
    <Style x:Key="PopupStyle" TargetType="{x:Type logging:Popup}">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="20" />
    </Style>
</ResourceDictionary>